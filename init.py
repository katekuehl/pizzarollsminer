import requests
from html.parser import HTMLParser


cookies = {
    'ASP.NET_SessionId': 'q2krbdjnbnf1zct2x5fxvjzz',
    'TS012d1a5a': '017aa497d29a3eafda84e19d2cdca1b91540d12b07b55fe5d426347153446c224ad4b55f2c743ee220c9c6ae23a6a83b0a20c91737',
}

headers = {
    'Origin': 'http://consumercontacts.generalmills.com',
    'Accept-Encoding': 'gzip, deflate',
    'Accept-Language': 'en-US,en;q=0.8,es;q=0.6,sw;q=0.4',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Cache-Control': 'max-age=0',
    'Referer': 'http://consumercontacts.generalmills.com/CrunchProdAvailability/ProductAvailability.aspx?m=149',
    'Connection': 'keep-alive',
    'DNT': '1',
}

def set_data(zip):
    data = {
        '__LASTFOCUS': '',
        '__EVENTTARGET': 'grdProducts$ctl16$btnSelectDesc',
        '__EVENTARGUMENT': '',
        '__VIEWSTATE': '',
        '__VIEWSTATEGENERATOR': 'B9840E29',
        '__VIEWSTATEENCRYPTED': '',
        '__EVENTVALIDATION': 'hAsSlCUHE709cBpcqD4L/dFKp/6qTAmWsWuhvF8k+zUufONVrycVkJ8giQYZf8q2G4JH3QyPZh87WFTq0hP6C/qDFHQcyxawNup4HHktGXUzit13Wc+Q0AS4IcKRmiL798XVcDKANXMVVmuJVx/OPW3WN/v1+PFGKewi3o0/O9kb09CjG5ETSJGEJg98nuID2CeBHQ9a9EIhPj70tf7GfcvaZGd6hldRZQy0HID3ZgEyorqB9Ibd/8SAcmeqBblFGyZOjadUmMbSaEfGm74/cLKe1tobPRcl34dD8V1I9IFX1nE6Yqs0OEUIGhTrYSE0IsbqqrXQ2YgoLCQAXy00zm1Gvfmt1NuyPBoYxc2F/uAm+UEciEYVIBoka3QKx1LwFNwv8fJhwaTDGRuaw+B4FvCET34ktK++8W+i6z0wnbyFUyA/1HDl8iFpM5OVJIiEDLu/m99n8WRoH5aopEK7PNAGzWQr/py8yIxgBXuWw+tEFu7vaLZ2xhMMt3bFX4XBuzAXGpTJ3he3i4/11M6zU3wgViHaoV5i0/YPL9QyuYeo0YBzZWIC8I/F2vwN+jDdYxSlBBvFnYzmB9WtQ+4KZ8qSovdS/Y9ry+O/5D64gXPh/JEB/Krn6Q1bbdGwUC/eSlMP/aQoXw9ew9qO7YTfSjfS5I+iwV7AOyrL4jPPFvwXoW/ll7THm/lWX+7SUmae1N4cH2lZvkl5MuH5eqyWET7dmkfkMoT/1X1DCrrJzLgXyoxY0mzvhgEVQ8WYyt/41fhT+lARaI9GctREOvEL2zCFDBeRk/DcgnYdE6PFWG1lRRbB5JeBwyelVQ7cdJ1PoZW4P4kSS+ByiGM1n5NX4iw2zlRPU204mnyhKUuEXkNEzh0OIGzGYDFD4QHGwVF5pE4xpUkhOq1N9s5cxP/nU8wkI/j4VleXz8q3s87lbeq2NNCCkg5hjTV7LjgpSgpwrcONtr5Djcs8Mts4TufAEW2x6ojcff6CTj0cDULRPxA+jOhFONjIa002gwu0jgyOxP0+On5eLylZanH/1KNoVyK6RLPaa5Y93H0dBeniS0mmfvOVZBCawpLQN8FzNtu/bF73iHoC/HmeJnx2GBPRN6A525oEGR660GXpx2gQPpAjqf2c7T0Z/KJ4DcLQIs8Ya14kYCT2lgxRN4Difi80KcgrjeMAfAYwgXn4+Si7uyPOVrxOL5TM0Bje6Y7xxGDMwB73NozMzwzGo7J/qvaeG1vHb5qwu9dXXoH+0YKU/YWq9bEKUbvOtWzJMrq2vZa+wrC5MjrwQsww2F+TBk4+xXbOrN053tE9lJQKXuHJ10ckX228M9w+9P6l19P05j9JL3T51k+COJMYab5qgwd0xgIbJnU9GNC9Auvsn0VJpfH9aC9HRdkAGC5fQ7mx0AsnPQCLkVoEc2/vIS3yYfIAjX7kSQFDFBjIk9eaR3CoN29hkkHgpPmpX8dzP4e0Mjq4VVu0i7efjXT8EAEJRpxw6z/4OhVPRITqWFy13mFl+ExKHHVUnQHg9wYu8UenZvFoDfU+9w2iyFjjOCArTPh6Vqulv6uBjLJbVAZlC32QiVvftjibAgtiWm+4WBcqGo58OtiQAuwfeuX/KibwpuAcUIrDsk0loWc5tkUGfwZu3EU+FMONW8czqoesw0qvXEFMy26ve3CcKPFSjJNNQrTCwlL2B0vJx6ZNwqVkBGS+HKIZd+LiRTe8fpJPcsRW2Ux5A7cQo4+afQBJfcqknfaisA5JpG/+Br+NPjcRnmn9X1nGo7OtouWr1sMkteYRdshUHoQoU7EgWYJQmmw6C4x5dYsJXou3uVvHtv6YzOKaUDbS9c7FsME0gPWYK7I3de9S6Pt5cM8INWlaY+dRKvkPnzKRXxW380GGpG31y7+c55T2Rulo',
        'txFocusTop': '',
        'txtBoxAddress': '',
        'txtBoxZip': zip,
        'hdnZipInvalid': 'Please enter a valid postal code',
        'hdnZipCanadian': 'The Product Locater does not contain information about product sold in Canada.',
        'txtBoxNumberOfStores': '50',
        'ddlMiles': '20',
        'hdnrevStoreNumber': 'Please enter a two digit numeric value for the number of stores',
        'hdnrfvStoreNumber': 'Please enter a value for the number of stores',
        'txtBoxProduct': '',
        'ddlProducts': '8029',
        'hdnTxtDiscontinued': '- Discontinued*',
        'hdnNmethod': '149',
        'hdnBrand': '',
        'hdnUPC': '',
        'hdnPstCode': '',
        'hdnStrAdr': '',
        'hdnCulture': 'en-us',
        'googleLinkUp': '',
        'hdnSuppressMapping': '',
        'hdnSelectedBrand': '',
        'hdnstCount': '',
        'hdnddlMiles': '',
        'hdnSelectedProduct': '',
        'txFocusBottom': ''
    }
    return data

#zipcodes_list = zipcode.list_of_zipcodes()
zipcodes_list = ['00705', '00610', '00611', '00612', '00601', '00631', '00602', '00603', '00604', '00605']

#for i in zipcodes_list:
#   zip = i
#    data = set_data(zip)
#    r = requests.post('http://consumercontacts.generalmills.com/CrunchProdAvailability/ProductAvailability.aspx?m=149', headers=headers, cookies=cookies, data=data)
#    print(r.text)

data = '55038'
r = requests.post('http://consumercontacts.generalmills.com/CrunchProdAvailability/ProductAvailability.aspx?m=149', headers=headers, cookies=cookies, data=data)
#print(r.text)


# create a subclass and override the handler methods
class MyHTMLParser(HTMLParser):
    def handle_starttag(self, tag, attrs):
        print ("Encountered a start tag:", tag)

    def handle_endtag(self, tag):
        print ("Encountered an end tag :", tag)

    def handle_data(self, data):
        print ("Encountered some data  :", data)

# instantiate the parser and fed it some HTML
print(r.text)
parser = MyHTMLParser()
parser.feed(r.text)

